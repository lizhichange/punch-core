<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.dangdang.com/schema/ddframe/rdb
                           http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">

    <!-- 数据源配置 alibaba.druid 自动识别驱动类 -->
    <bean id="dataSource" class="org.near.dal.datasource.ExtDruidDatasource" init-method="init" destroy-method="close">
        <property name="dataSourceService" ref="dataSourceService"/>
        <property name="dsCode" value="${datasouce.code}"/>
        <property name="envType" value="${product.env}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="20"/>
        <property name="minIdle" value="20"/>
        <property name="maxActive" value="800"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="50"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>


    <!-- myBatis文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource"/>
        <property name="mapperLocations" value="classpath*:META-INF/sqlmap/*Mapper.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fulihui.punch.dal.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- transaction support-->
    <!-- PlatformTransactionMnager -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource"/>
    </bean>

    <bean id="transactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="txManager"/>
    </bean>

    <!-- enable transaction annotation support -->
    <tx:annotation-driven transaction-manager="txManager"/>

    <!-- ==============================================
    - 分库分表规则配置
    -->
    <rdb:strategy id="userIdShardingAlgorithm" sharding-columns="user_id"
                  algorithm-class="com.fulihui.punch.algorithm.UserIdShardingAlgorithm"/>


    <rdb:data-source id="shardingDataSource">
        <rdb:sharding-rule data-sources="dataSource" default-data-source="dataSource">
            <rdb:table-rules>
                <rdb:table-rule logic-table="user_punch_record"
                                actual-tables="user_punch_record_${0..9}"
                                data-source-names="dataSource" table-strategy="userIdShardingAlgorithm">
                </rdb:table-rule>

                <rdb:table-rule logic-table="user_punch_amount"
                                actual-tables="user_punch_amount_${0..9}"
                                data-source-names="dataSource" table-strategy="userIdShardingAlgorithm">
                </rdb:table-rule>

                <rdb:table-rule logic-table="t_user_detail"
                                actual-tables="t_user_detail_${0..9}"
                                data-source-names="dataSource" table-strategy="userIdShardingAlgorithm">
                </rdb:table-rule>

            </rdb:table-rules>
        </rdb:sharding-rule>
        <rdb:props>
            <prop key="metrics.enable">false</prop>
            <prop key="sql.show">false</prop>
        </rdb:props>
    </rdb:data-source>

    <!--metrics.enable: 是否开启度量采集，默认值: false-->
    <!--sql.show: 是否开启SQL显示，默认值: false-->
    <!--metrics.millisecond.period: 度量输出周期，单位: 毫秒，默认值: 30000毫秒-->

    <!--executor.min.idle.size: 最小空闲工作线程数量，默认值: 0-->
    <!--executor.max.size: 最大工作线程数量，默认值: CPU核数乘2-->
    <!--executor.max.idle.timeout.millisecond: 工作线程空闲时超时时间，单位: 毫秒，默认值: 60000毫秒-->


    <bean id="threadPoolTaskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10"/>
        <property name="maxPoolSize" value="50"/>
        <property name="queueCapacity" value="5000"/>
    </bean>
</beans>